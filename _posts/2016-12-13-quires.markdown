---
layout: post
title:  "Building The Forge: Queries"
date:   2016-12-13
categories: jekyll update
---

Before we insert oue query statements into the server side of our code, I want to first make good on the 
    promise from the end of our first post and 
    give a quick run down of the type of queries we will be using. 

The first is a select statement. 

We are dealing with two types of select statements in our web app. The first is one in which we 
    select all the items in our database and display them to the user. That statement will look like this: 
{% highlight postgresql %} 
    select * from rosaries
{% endhighlight %} 

Let's break the code down piece by piece to get a better understanding of what is going on. 

| part of command | function                                                       |                                                
| -------------- | ------------------------------------------------------------- |
| Select         | tells us that we will be selecting items from the table        |
| *              | tells us what we are selecting. in this case * means all items |
| from            | key word to select which table we are reading                  | 
| rosaries        | name of the table                                              | 


We are not just giving the user the ability to select all rosaries. 
    we are also giving users the opertunity to search by the owner of the rosary 
    or the name. 

for this we will add the where and the like clauses. This will allow us to filter items. 
    So for the example, let's say we want to find out every rosary we have made that is named "philomina"

That select quiry would look like this: 

{% highlight postgresql %} 
select * from rosaries where rosary_name like 'philomina';  
{% endhighlight %} 

the where clause tells us which item in the table we are looking at, 
    and the like clause is the equivilant to an == operator in c++ or java, it 
    telling us what kind of items we want to pull from our database. 

like wise if we want to search for all rosaries we have made for Maddie Smith our quiry would look like this: 
{% highlight postgresql %} 
select * from rosaries where recipiant like 'Maddie Smith';  
{% endhighlight %} 

we can also combine these two quiries with the OR clause. The Query we will end up placing in our searc funtion 
    in server.py will end up looking like this: 

{% highlight postgresql %} 
select * from rosaries where recipiant like 'Maddie Smith' or where rosary_name like 'philomina';
{% endhighlight %} 

this will give us all the rosaies we have made for Maddie Smith, and all the rosaries we have named 
    philomina. 

The next funtion our web app has is that to add rosaries to the database. For this we will use an insert statement. 

Let's say we want to insert a rosary we have just made for  John Doe. 
    it is a silver rosary with blue beads, a green hope bead, named Kolbe, with a sacred heart centerpiece and a
    sait bennidict crucifix. the insert statment will look like this: 

{% highlight postgresql %} 
insert into rosaries (rosary_name, our_father_bead, hail_mary_bead, hope_bead, center_piece, crucifix, color) 
    values ('kolbe', 'blue', 'blue', 'green', 'sacred heart', 'benidict', 'silver', 'John Doe'); 
{% endhighlight %} 

In this statement the into clause is telling us which table we are inserting into. We then list all of the columns in the table we are filling, followed by the values we are filling them with. 

In the next post we will integrate these quires into our server.py to finally give our webapp the functionality we 
    have been building up to. 