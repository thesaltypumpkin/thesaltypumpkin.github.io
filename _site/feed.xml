<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2016-12-03T16:28:14-05:00</updated><id>http://localhost:4000//</id><title type="html">Building The Forge</title><subtitle>Building The Forge is a developer blog that takes you through  the development of a personal web app that will be used to keep  track of all of the rosaries that I make for my ministry The Forge Custom Rosaries.  The skills showcased on this website were learned in COMPSCI 350 (databases) at  The University of Mary Washington. There will also be posts called &quot;detours&quot; that will show case skills that I have learned  are not part of Building The Forge. 
</subtitle><entry><title type="html">Building The Forge: Flask Template Part 1</title><link href="http://localhost:4000/jekyll/update/2016/12/01/setting-up-flask-template.html" rel="alternate" type="text/html" title="Building The Forge: Flask Template Part 1" /><published>2016-12-01T00:00:00-05:00</published><updated>2016-12-01T00:00:00-05:00</updated><id>http://localhost:4000/jekyll/update/2016/12/01/setting-up-flask-template</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/12/01/setting-up-flask-template.html">&lt;p&gt;In the last post we talked about how I set up my database for The Forge. 
	In this post we are going to discuss how I set up the flask template 
	using cloud9 as a host for the web app.&lt;/p&gt;

&lt;p&gt;I’m not going to go in depth about cloud9. The gist is that it is this developing
	environment in the could. It’s really cool. You get a workspace, and you can 
	locally host a web app and it’s really super useful.&lt;/p&gt;

&lt;p&gt;So to start a flask template, there is some basic setup.&lt;/p&gt;

&lt;p&gt;you go to your terminal and type in this :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt; 
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;easy_install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now flask is installed. We’re going to come back to this.&lt;/p&gt;

&lt;p&gt;But first I am going to talk about how I set up my html template. 
	I cruised the web and found a free html template. There are a lot of them out there,
	there are free ones and then there are more fancy ones that you can buy. The free ones 
	are super easy to modify to fit your needs.&lt;/p&gt;

&lt;p&gt;So because I am creating a super simple web app, 
	One with two pages. A page to search my database, and a page to insert things into it. 
	I went with a really simple template, and modified it to make it.. well, simplier.&lt;/p&gt;

&lt;p&gt;Once I had the over all template the way I wanted it, it was time to begin to flaskify it.&lt;/p&gt;

&lt;p&gt;There are two folders to be aware of when flaskifying a template. The first is the static folder, 
	and the second is the template folder.&lt;/p&gt;

&lt;p&gt;We are not going to talk much about the static folder, but just be aware that in that folder you 
	putt all your css files and images and other things that remain static to your websight.&lt;/p&gt;

&lt;p&gt;The second folder is the template folder. This is where all the magic happens.&lt;/p&gt;

&lt;p&gt;So I followed these steps to set up the HTML side of my web app, all of these files were placed in 
	the template folder.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Take the original file that I modified and rename it layout.html 
  inside the file I find the part of the template that will change from page to page and I add this line of code that puts
  word “block content” with in brackets and percent signs and “end block” within brackets and percent signs.&lt;/li&gt;
  &lt;li&gt;The next step I took was to make my search page, which also doubled as my home page. 
  I did this in a file called index.html, the html of the page was inbetween a “block content” and an “end block” for
  formated as described above, and looked like this:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;    	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;column_w530&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        	
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;header_02&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Welcome to The Forge&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;to display all rosarys type &quot;display all&quot;, otherwise you can search by name, or recipiant&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Search:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;40&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;go&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now what’s cool, is that chunk of html is incerted right into the space in layout.html that we reserved with 
    our block content page. We will see how this is implimented further down in this post.&lt;/p&gt;

&lt;p&gt;Now what I created here is a basic search bar where I will be able to display all of the rosaries in my database
    or search by the name of the rosary or the recipiant.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The next page I made was my add rosary page. This is not doubling as my home page so I named this file add_rosary.html 
  following the same format as above I added this html code into the file.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;    	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;column_w530&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        	
            
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;to add a rosary to database&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/ordercomplete&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;Rosary Name:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rosary_name'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;Hail Mary:&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hail_mary_color'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;Our Father:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'our_father_color'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;Hope Bead:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hope_color'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;Center Piece:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'center'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;Crucifix:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'crucifix'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;Color:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'color'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;Recipiant:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'recipiant'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'submit'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'submit'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            
            
            
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This created a form page where I could input information about a new rosary to be added to the database.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;back in the layout.html I added some html to provide a link to both of these pages that I just created in the menue bar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once my template as created the next step was to create a server.py file that will tie all of these pages 
	togeather and launch the web app using flask.&lt;/p&gt;

&lt;p&gt;We will go over how I made that file in the next update.&lt;/p&gt;</content><summary type="html">In the last post we talked about how I set up my database for The Forge. 
	In this post we are going to discuss how I set up the flask template 
	using cloud9 as a host for the web app.

I’m not going to go in depth about cloud9. The gist is that it is this developing
	environment in the could. It’s really cool. You get a workspace, and you can 
	locally host a web app and it’s really super useful.

So to start a flask template, there is some basic setup.</summary></entry><entry><title type="html">Building The Forge: Database</title><link href="http://localhost:4000/jekyll/update/2016/11/30/Setting-Up-A-Database.html" rel="alternate" type="text/html" title="Building The Forge: Database" /><published>2016-11-30T00:00:00-05:00</published><updated>2016-11-30T00:00:00-05:00</updated><id>http://localhost:4000/jekyll/update/2016/11/30/Setting-Up-A-Database</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/11/30/Setting-Up-A-Database.html">&lt;p&gt;The database for The Forge was created using postgresql. 
   If you would like to create your own database 
   you can follow these basic steps on how I created mine and adapt
   information as needed to fit your own needs.&lt;/p&gt;

&lt;p&gt;The first I needed to create the database it’s self. I did that as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-postgresql&quot; data-lang=&quot;postgresql&quot;&gt;CREATE DATABASE The_forge&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now I needed tables in my database. 
   For the first version of this webapp I decided to keep things
   pretty simple. 
   As the database gets more complex you will see follow up posts describing
   the changes I made.&lt;/p&gt;

&lt;p&gt;I started things with just one table. 
   This table will store all of my information for a rosary that I have made. 
   As time goes on and we develop The Forge we will begin to Normalize our tables. 
   Naturlly, once we begin the process of Normalization will will see more tables emerge.&lt;/p&gt;

&lt;p&gt;creating the table looked like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-postgresql&quot; data-lang=&quot;postgresql&quot;&gt; 
CREATE TABLE rosaries( 
   r_id serial primary key
   rosary_name varchar(30) NOT NULL, 
   our_father_bead varchar(30) NOT NULL, 
   hail_Mary_bead varchar(30) NOT NULL, 
   hope_bead varchar(30) NOT NULL, 
   center_piece varchar(30) NOT NULL, 
   crucifix varchar(30) NOT NULL, 
   color varchar(30) NOT NULL,
   recipiant varchar(30) NOT NULL
 );&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To give a little context for those columns in the chart:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;rosary_name is the name given to the rosary, usually adapted from the saint prayed with.&lt;/li&gt;
  &lt;li&gt;our_father_bead, hail_mary_bead, and hope_bead are the colors for the three types of beads on the rosary.&lt;/li&gt;
  &lt;li&gt;center_piece and crucifix are the type of centerpiece and crucifix that I used.&lt;/li&gt;
  &lt;li&gt;color is the color of the rosary findings (gold, silver, ect.).&lt;/li&gt;
  &lt;li&gt;recipient is who I gave the rosary to.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once the table was created I could start adding things to it. 
A basic insert statement looked like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-postgresql&quot; data-lang=&quot;postgresql&quot;&gt;INSERT into rosaries (rosary_name, our_father_bead, hail_mary_bead, hope_bead, center_piece, crucifix, color, recipiant)
   VALUES (Albert, blue, redswirl, red, miraculous medal, standard crucifix, silver, maddie)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You will see the types of quires that I used to acsess the table 
   when I talk about how I set up the actual web-app using flask, so stay tuned for that.&lt;/p&gt;</content><summary type="html">The database for The Forge was created using postgresql. 
   If you would like to create your own database 
   you can follow these basic steps on how I created mine and adapt
   information as needed to fit your own needs.</summary></entry></feed>
